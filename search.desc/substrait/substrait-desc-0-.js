searchState.loadedDescShard("substrait", 0, "Serializer and deserializer registry for extensions like …\nDeserialize user defined logical plan node (…\nSerialize this node to a byte array. This serialization …\nRe-export the Substrait module of datafusion, note this is …\nType variation constants\nAn ExprContainer is a container for a collection of …\nThe expressions\nReturns the argument unchanged.\nConvert Substrait AggregateFunction to DataFusion Expr\nConvert Substrait ExtendedExpression to ExprContainer\nConvert Substrait FunctionArguments to DataFusion Exprs\nConvert Substrait NamedStruct to DataFusion DFSchemaRef\nConvert Substrait Plan to DataFusion LogicalPlan\nConvert Substrait Rel to DataFusion DataFrame\nConvert Substrait Rex to DataFusion Expr\nConvert Substrait Expressions to DataFusion Exprs\nConvert Substrait Sorts to DataFusion Exprs\nThe input schema for the expressions\nCalls <code>U::from(self)</code>.\nReturn Substrait scalar function with two arguments\nSerializes a collection of expressions to a Substrait …\nConvert DataFusion LogicalPlan to Substrait Plan\nConvert DataFusion LogicalPlan to Substrait Rel\nConvert DataFusion Expr to Substrait Rex\nThis trait provides the context needed to transform a …\nReturn SerializerRegistry for extensions\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSNAFU context selector for the <code>Error::DecodeDfPlan</code> variant\nSNAFU context selector for the <code>Error::DecodeRel</code> variant\nSNAFU context selector for the <code>Error::EncodeDfPlan</code> variant\nSNAFU context selector for the <code>Error::EncodeRel</code> variant\nContains the error value\nSNAFU context selector for the <code>Error::Internal</code> variant\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeserialize user defined logical plan node (…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize this node to a byte array. This serialization …\nThe “system-preferred” variation (i.e., no variation).\nFor <code>DataType::Interval</code> with <code>IntervalUnit::DayTime</code>.\nFor <code>DataType::Interval</code> with <code>IntervalUnit::MonthDayNano</code>.\nFor <code>DataType::Interval</code> with <code>IntervalUnit::MonthDayNano</code>.\nFor <code>DataType::Interval</code> with <code>IntervalUnit::YearMonth</code>.")